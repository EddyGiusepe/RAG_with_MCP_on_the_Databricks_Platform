#! /usr/bin/env python3
"""
Senior Data Scientist.: Dr. Eddy Giusepe Chirinos Isidro

Script client.py
================
Este script Ã© um cliente simples que conecta ao servidor MCP 
via HTTP e envia uma query para o servidor e exibe a resposta.

Run
---
uv run client.py
"""
# This file is auto-generated by LitServe.
# Disable auto-generation by setting `generate_client_file=False` in `LitServer.run()`.
from rich import print
from rich.console import Console  # Cria um objeto "Console" com mais recursos
import requests

console = Console()


def fazer_query(query: str) -> None:
    """Envia uma query para o servidor e exibe a resposta."""
    try:
        response = requests.post(
            "http://127.0.0.1:8000/predict", json={"query": query}, timeout=30
        )
        print(f"\n[bold green]Status:[/bold green] {response.status_code}")
        print("[bold cyan]Resposta:[/bold cyan]")
        print(response.json())
    except requests.exceptions.RequestException as e:
        print(f"[bold red]Erro na requisiÃ§Ã£o:[/bold red] {e}")


def main():
    """Modo interativo para fazer queries."""
    console.print(
        "\n[bold blue]ðŸ¤– Cliente RAG Interativo[/bold blue]", justify="center"
    )
    console.print("[yellow]Digite suas perguntas ou 'sair' para encerrar[/yellow]\n")

    while True:
        try:
            query = input("ðŸ’¬ Sua pergunta: ").strip()

            if not query:
                console.print("[yellow]Por favor, digite uma pergunta vÃ¡lida.[/yellow]")
                continue

            if query.lower() in ["sair", "exit", "quit", "q"]:
                console.print("\n[bold green]ðŸ‘‹ AtÃ© logo![/bold green]\n")
                break

            fazer_query(query)
            print("\n" + "-" * 80 + "\n")

        except KeyboardInterrupt:
            console.print("\n\n[bold green]ðŸ‘‹ AtÃ© logo![/bold green]\n")
            break
        except Exception as e:
            console.print(f"[bold red]Erro inesperado:[/bold red] {e}")


if __name__ == "__main__":
    main()
